<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tomas Beuzen</title>
    <link>http://tomasbeuzen.github.io/</link>
      <atom:link href="http://tomasbeuzen.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Tomas Beuzen</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 10 Jan 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://tomasbeuzen.github.io/img/icon-192.png</url>
      <title>Tomas Beuzen</title>
      <link>http://tomasbeuzen.github.io/</link>
    </image>
    
    <item>
      <title>Simultaneous feature preprocessing, feature selection, model selection, and hyperparameter tuning in scikit-learn with Pipeline and GridSearchCV</title>
      <link>http://tomasbeuzen.github.io/post/scikit-learn-gridsearch-pipelines/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/post/scikit-learn-gridsearch-pipelines/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Some of the key steps in a machine learning workflow are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;feature preprocessing (encoding categorical features, scaling numeric features, transforming text data, etc.);&lt;/li&gt;
&lt;li&gt;feature selection (choosing which features to include in the model);&lt;/li&gt;
&lt;li&gt;model selection (choosing which machine learning estimator to use); and,&lt;/li&gt;
&lt;li&gt;hyperparameter tuning (determining the optimum hyperparameter values to use for each estimator).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It can be difficult to perform these tasks in an accurate, efficient and reproducible manner. In particular, it is important to ensure that, during cross-validation, feature preprocessing and feature selection are based only on the training portion of data, preventing leakage from the validation set which could bias our results. In this short, practical post I&amp;rsquo;ll demonstrate how to use &lt;a href=&#34;https://scikit-learn.org/stable/&#34; target=&#34;_blank&#34;&gt;scikit-learn&lt;/a&gt; to simultaneously perform the above steps. While the example given is somewhat contrived, the syntax and workflow are what is important here and can be applied to any machine learning workflow.&lt;/p&gt;

&lt;h3 id=&#34;step-1-import-dependencies&#34;&gt;Step 1: Import dependencies&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from sklearn.pipeline import Pipeline
from sklearn.datasets import make_classification
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import GridSearchCV
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.feature_selection import SelectKBest, mutual_info_classif
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-2-import-data&#34;&gt;Step 2: Import data&lt;/h3&gt;

&lt;p&gt;We will create a synthetic binary classification dataset for this demonstration using the scikit-learn function &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.datasets.make_classification.html&#34; target=&#34;_blank&#34;&gt;make_classification&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;X, y = make_classification(n_samples=1000,
                           n_features=30,
                           n_informative=5,
                           n_redundant=5,
                           n_classes=2,
                           random_state=123)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-3-create-pipeline-framework&#34;&gt;Step 3: Create pipeline framework&lt;/h3&gt;

&lt;p&gt;Using our synthetic dataset, we are going to set up a pipeline object that will:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Standardize the data using &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html&#34; target=&#34;_blank&#34;&gt;StandardScaler&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;k&lt;/code&gt; best features from the data using &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectKBest.html&#34; target=&#34;_blank&#34;&gt;SelectKBest&lt;/a&gt; and the &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.mutual_info_classif.html&#34; target=&#34;_blank&#34;&gt;mutual information metric&lt;/a&gt; (where &lt;code&gt;k&lt;/code&gt; is a hyperparameter that we will tune during the fitting process); and,&lt;/li&gt;
&lt;li&gt;Use an estimator to model the data, here we will be trying a &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html&#34; target=&#34;_blank&#34;&gt;LogisticRegression&lt;/a&gt;, &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html&#34; target=&#34;_blank&#34;&gt;RandomForestClassifier&lt;/a&gt;, and &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html&#34; target=&#34;_blank&#34;&gt;KNeighborsClassifier&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The syntax for creating this pipeline is shown below. To instantiate the &lt;code&gt;Pipeline&lt;/code&gt; object I&amp;rsquo;ve used  a &lt;code&gt;k&lt;/code&gt; value in &lt;code&gt;SelectKBest&lt;/code&gt; of 5 and I&amp;rsquo;ve input &lt;code&gt;LogisticRegression&lt;/code&gt; as the estimator, but these are simply placeholders for now and they will be varied during the fitting stage.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pipe = Pipeline([(&#39;scaler&#39;, StandardScaler()),
                 (&#39;selector&#39;, SelectKBest(mutual_info_classif, k=5)),
                 (&#39;classifier&#39;, LogisticRegression())])
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-4-create-search-space&#34;&gt;Step 4: Create search space&lt;/h3&gt;

&lt;p&gt;The next step is to define the space of hyperparameters and estimators we want to search through. We do this in the form of a dictionary and we use double underscore notation (&lt;code&gt;__&lt;/code&gt;) to refer to the hyperparameters of different steps in our pipeline. We will be trying out different values of &lt;code&gt;k&lt;/code&gt; for the feature selector &lt;code&gt;SelectKBest&lt;/code&gt;, as well as different hyperparameter values for each of our three estimators as shown below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;search_space = [{&#39;selector__k&#39;: [5, 10, 20, 30]},
                {&#39;classifier&#39;: [LogisticRegression(solver=&#39;lbfgs&#39;)],
                 &#39;classifier__C&#39;: [0.01, 0.1, 1.0]},
                {&#39;classifier&#39;: [RandomForestClassifier(n_estimators=100)],
                 &#39;classifier__max_depth&#39;: [5, 10, None]},
                {&#39;classifier&#39;: [KNeighborsClassifier()],
                 &#39;classifier__n_neighbors&#39;: [3, 7, 11],
                 &#39;classifier__weights&#39;: [&#39;uniform&#39;, &#39;distance&#39;]}]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-5-run-the-gridsearch&#34;&gt;Step 5: Run the GridSearch&lt;/h3&gt;

&lt;p&gt;This is where the magic happens. We will now pass our pipeline into &lt;a href=&#34;https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html&#34; target=&#34;_blank&#34;&gt;GridSearchCV&lt;/a&gt; to test our search space (of feature preprocessing, feature selection, model selection, and hyperparameter tuning combinations) using 10-fold cross-validation.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;clf = GridSearchCV(pipe, search_space, cv=10, verbose=0)
clf = clf.fit(X, y)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;step-6-get-the-results&#34;&gt;Step 6: Get the results&lt;/h3&gt;

&lt;p&gt;We can access the best result of our search using the &lt;code&gt;best_estimator_&lt;/code&gt; attribute. For this particular case, the &lt;code&gt;KNeighborsClassifier&lt;/code&gt; did the best, using &lt;code&gt;n_neighbors=3&lt;/code&gt; and &lt;code&gt;weights=&#39;distance&#39;&lt;/code&gt;, along with the &lt;code&gt;k=5&lt;/code&gt; best features chosen by &lt;code&gt;SelectKBest&lt;/code&gt;. This combination had a 10-fold cross-validation accuracy of 0.958.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;clf.best_estimator_
Pipeline(memory=None,
         steps=[(&#39;scaler&#39;,
                 StandardScaler(copy=True, with_mean=True, with_std=True)),
                (&#39;selector&#39;,
                 SelectKBest(k=5,
                             score_func=&amp;lt;function mutual_info_classif at 0x1a1f91db00&amp;gt;)),
                (&#39;classifier&#39;,
                 KNeighborsClassifier(algorithm=&#39;auto&#39;, leaf_size=30,
                                      metric=&#39;minkowski&#39;, metric_params=None,
                                      n_jobs=None, n_neighbors=3, p=2,
                                      weights=&#39;distance&#39;))],
         verbose=False)

clf.best_score_
0.958
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Controls of variability in berm and dune storm erosion</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-jgr/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-jgr/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>The Git Fork-Branch-Pull Workflow</title>
      <link>http://tomasbeuzen.github.io/post/git-fork-branch-pull/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/post/git-fork-branch-pull/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I primarily use Git and GitHub for my open-source work. However, if your anything like me, using these tools sometimes feels like a bit of a black box, nicely summarised by this xkcd comic:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;image_2.png&#34; alt=&#34;png&#34; /&gt;
&lt;strong&gt;&lt;em&gt;Git. Source: &lt;a href=&#34;https://xkcd.com/1597/&#34; target=&#34;_blank&#34;&gt;xkcd.com&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I particularly feel this way when wanting to contribute to others&amp;rsquo; open-source projects on GitHub. For this, we typically use the &amp;ldquo;fork-and-branch&amp;rdquo; workflow. I wanted to document my simple approach to this workflow here (for reference by my future self and others). The workflow comprises the following steps which are described in more detail in the subsequent sections:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Fork a GitHub repository: navigate to a repository on GitHub and click the &lt;code&gt;Fork&lt;/code&gt; button.&lt;/li&gt;
&lt;li&gt;Clone the repository locally: &lt;code&gt;git clone https://github.com/user/repo.git&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add remote called &amp;ldquo;upstream&amp;rdquo; pointing to the original repository: &lt;code&gt;git remote add upstream https://github.com/user/repo.git&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Checkout a new branch (here called &amp;ldquo;new_feature&amp;rdquo;): &lt;code&gt;git checkout -b new_feature&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make desired changes to the local repository on this branch.&lt;/li&gt;
&lt;li&gt;Push changes to your remote repository: &lt;code&gt;git push origin new_feature&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open a pull request on GitHub merging your changes with the upstream (original) repository.&lt;/li&gt;
&lt;li&gt;Once the pull request is accepted, you&amp;rsquo;ll want to pull those changes into your origin (forked repository). Change to master: &lt;code&gt;git checkout master&lt;/code&gt; and pull: &lt;code&gt;git pull upstream master&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Delete your feature branch using the GitHub website or, delete the local branch: &lt;code&gt;git branch -d new_feature&lt;/code&gt;, and delete the remote: &lt;code&gt;git push origin --delete new_feature&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;1-forking-a-github-repository&#34;&gt;1. Forking a GitHub Repository&lt;/h3&gt;

&lt;p&gt;The first step is to fork the GitHub repository you want to work on. A &amp;ldquo;fork&amp;rdquo; is just an independent copy of a repository that you can develop on without affecting the original. To fork a repository, find it on GitHub and then click the &lt;code&gt;Fork&lt;/code&gt; button.&lt;/p&gt;

&lt;h3 id=&#34;2-clone-the-repository-locally&#34;&gt;2. Clone the repository locally&lt;/h3&gt;

&lt;p&gt;Before you can make changes to the repository you&amp;rsquo;ll first want to make a local copy on your computer. This is as simple as using &lt;code&gt;git clone&lt;/code&gt; on the forked repository. Navigate to your forked repository on GitHub, click the &amp;ldquo;Clone or download&amp;rdquo; button and copy the url. Then, at the command line, clone the repository, for example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/user/repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-add-a-remote&#34;&gt;3. Add a remote&lt;/h3&gt;

&lt;p&gt;When you cloned the forked repository onto your local computer, git automatically added a remote repository named &amp;ldquo;origin&amp;rdquo; pointing to the forked repository on GitHub. This means that when you do &lt;code&gt;git add&lt;/code&gt;/&lt;code&gt;git commit&lt;/code&gt;/&lt;code&gt;git push&lt;/code&gt; you can push your local changes to the forked repository.&lt;/p&gt;

&lt;p&gt;However, the goal here is to contribute to the original repository and we want to keep up to date with the original. While we are making changes, others might also be making changes and the original repository might be getting updated during the time you are adding a feature. So we want to add another remote pointing to the original repository so that we can periodically &lt;code&gt;git pull&lt;/code&gt; any changes that have occurred in that repository such that we are working on the must up-to-date version of the code. We usually call this remote &amp;ldquo;upstream&amp;rdquo; and can add it using:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git remote add upstream https://github.com/user/repo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can verify that you now have two remotes, &amp;ldquo;origin&amp;rdquo; and &amp;ldquo;upstream&amp;rdquo; using the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git remote -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-checkout-a-new-branch&#34;&gt;4. Checkout a new branch&lt;/h3&gt;

&lt;p&gt;Okay, so now we&amp;rsquo;ve made a fork of the repository we want to work on, we&amp;rsquo;ve cloned it to our local computer and also added a remote pointing back to the original repository. Now we can start making our desired changes. To do this, we are going to want to create a branch to work on. This branch will be independent of the clean, functioning &amp;ldquo;master&amp;rdquo; code and is a safe place for you to delete, modify and add code. You can actually have multiple branches (for different features) that you&amp;rsquo;re working on at the same time. To create a branch called &amp;ldquo;new_feature&amp;rdquo;, use the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git checkout -b new_feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can verify that you created the branch by using the following command which will show you all your local and remote branches:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git branch -a
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-make-changes&#34;&gt;5. Make changes&lt;/h3&gt;

&lt;p&gt;Now that you have an independent workspace (a branch) to work on, that will not break any of the existing code, you can get to work implementing your changes. As you work you will &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; changes you make. It is likely that the longer you take to implement your changes, the more changes could be made to the original &amp;ldquo;upstream&amp;rdquo; code - which could be problematic, especially if the code you are changing on your branch also gets changed in the upstream repository, which can leave you with a bunch of troublesome &amp;ldquo;merge conflicts&amp;rdquo; to deal with later on. If you want to make sure your branch stays up-to-date with the original repository you forked, you&amp;rsquo;ll need to do two things. Firstly, update your &amp;ldquo;master&amp;rdquo; fork of the original repository by checking out the master branch and pulling from the upstream repository:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git checkout master
$ git pull upstream master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, go back to your branch and merge it with the master to incorporate any new changes:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git checkout new_feature
$ git merge master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-push-changes&#34;&gt;6. Push changes&lt;/h3&gt;

&lt;p&gt;When you&amp;rsquo;ve made all the changes you want to make to the code you&amp;rsquo;ll want to push it to your remote &amp;ldquo;origin&amp;rdquo; to get it ready to show to the maintainers of the &amp;ldquo;upstream&amp;rdquo; (original) repository you wanted to contribute to in the first place. To do this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git push origin new_feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will push your branch to your forked copy of the original repository.&lt;/p&gt;

&lt;h3 id=&#34;7-open-a-pull-request&#34;&gt;7. Open a pull request&lt;/h3&gt;

&lt;p&gt;Finally, we can open a &amp;ldquo;pull request&amp;rdquo; which essentially asks the maintainers of the original repository to take a look at and hopefully integrate your code changes into their repository. To open a pull request, go to the GitHub website, navigate to your &amp;ldquo;new_feature&amp;rdquo; branch and follow the prompts to open a pull request. Note that for many popular repositories, there will be a number of tasks you should complete before opening a pull request. For example, checking that the code still passes a number of pre-written tests, that the documentation still renders, etc. These kinds of guidelines for contributing to a repository are typically included in a repository&amp;rsquo;s root directory in a file called something like &amp;ldquo;contributing.md&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;8-updating-your-fork&#34;&gt;8. Updating your fork&lt;/h3&gt;

&lt;p&gt;Once the maintainers accept your changes, the code you wrote will now be incorporated into the original repository. Hooray! Once this is done, you&amp;rsquo;ll want to update your fork of the original repository (because it now includes the changes you added through your branch and pull request workflow). Locally, we will make sure we are on the master branch, and we will pull changes from the upstream (original) repository:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git checkout master
$ git pull upstream master
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-deleting-branches&#34;&gt;9. Deleting branches&lt;/h3&gt;

&lt;p&gt;Finally we can now delete our feature branch (both locally and remotely) because we no longer need it:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git branch -d new_feature
$ git push origin --delete new_feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note that during the pull request workflow on GitHub, you may have already deleted your feature branch by following prompts on GitHub which is fine too.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building your own website with Hugo and GitHub Pages</title>
      <link>http://tomasbeuzen.github.io/post/making-a-website-with-hugo/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/post/making-a-website-with-hugo/</guid>
      <description>

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I recently decided I wanted to create this personal website to serve as my online bio and to display various research and personal projects I am/have worked on. To my surprise, this actually turned out to be much easier than anticipated! So in this brief post I&amp;rsquo;ll walk you through how I created this website (for free!) in 5 simple steps using the static site generator &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; and the static site hosting service provided by &lt;a href=&#34;https://pages.github.com/&#34; target=&#34;_blank&#34;&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#1&#34;&gt;Install Hugo and get a GitHub account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2&#34;&gt;Set up a workspace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3&#34;&gt;Choose a theme for your website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4&#34;&gt;Creating your website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#5&#34;&gt;Hosting your website on GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#6&#34;&gt;Updating your website&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;step-1-install-hugo-and-get-a-github-account-a-name-1-a&#34;&gt;Step 1: Install Hugo and get a GitHub account &lt;a name=&#34;1&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;As I&amp;rsquo;m a mac user, I&amp;rsquo;ll provide instructions here for installing Hugo on macOS. For instructions on installing Hugo on Windows or Linux, go to the &lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34; target=&#34;_blank&#34;&gt;Hugo Installation Page&lt;/a&gt; and then skip to Step 2. To install Hugo on macOS, you&amp;rsquo;ll ned both Homebrew and Go. Homebrew is a free and open-source software package management system that simplifies the installation of software on macOS and Go is a programming language created by Google that Hugo will leverage to create your website framework. If you don&amp;rsquo;t have Homebrew or Go installed on your computer, run the following in the terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ /usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;

$ brew install go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, to install Hugo simply type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, if you don&amp;rsquo;t already have a GitHub account, head over to the &lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;GitHub website&lt;/a&gt; and create one.&lt;/p&gt;

&lt;h3 id=&#34;step-2-set-up-a-workspace-a-name-2-a&#34;&gt;Step 2: Set up a workspace &lt;a name=&#34;2&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The next thing we need to do is create a directory from which we will build our website, this can be anywhere you like on your computer. You can create a directory using the macOS Finder or Windows File Explorer GUIs, or alternatively by using the command line. For example, the code below creates a new directory called &lt;strong&gt;&lt;em&gt;websites&lt;/em&gt;&lt;/strong&gt; in the &lt;strong&gt;&lt;em&gt;Documents&lt;/em&gt;&lt;/strong&gt; folder:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd ~/Documents

$ mkdir websites
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, from the command line, change into your new directory:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd websites
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this directory we will use Hugo to create the framework for your website. Simply type the following with &lt;strong&gt;&lt;em&gt;&amp;ldquo;websitename&amp;rdquo;&lt;/em&gt;&lt;/strong&gt; replaced with whatever you want to call your website:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ hugo new site websitename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After executing this command, you will see something like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Congratulations! Your new Hugo site is created in ~/Documents/websitename.

Just a few more steps and you are ready to go:

1. Download a theme into the same-named folder.
   Choose a theme from https://themes.gohugo.io/ or
   create your own with the &amp;quot;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;quot; command.
2. Perhaps you want to add some content. You can add single files
   with &amp;quot;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;quot;.
3. Start the built-in live server via &amp;quot;hugo server&amp;quot;.

Visit https://gohugo.io/ for quickstart guide and full documentation.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Change into your newly created  &lt;strong&gt;&lt;em&gt;websitename&lt;/em&gt;&lt;/strong&gt; directory and view the contents using &lt;code&gt;ls&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd websitename

$ ls

archetypes	content		layouts		themes
config.toml	data		static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These files and folders form the framework of your Hugo site. We&amp;rsquo;ll explore them a little more later but for now, notice the &lt;strong&gt;&lt;em&gt;themes&lt;/em&gt;&lt;/strong&gt; folder. In the next step we will select a theme for your website and place it in this folder.&lt;/p&gt;

&lt;h3 id=&#34;step-3-choose-a-theme-for-your-website-a-name-3-a&#34;&gt;Step 3: Choose a theme for your website! &lt;a name=&#34;3&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;With Hugo you can create your very own website theme or download one of many different pre-made, open source themes. There are plenty of really great pre-made themes and they are perfect for getting your website up and running as quickly as possible. Head over to the &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34;&gt;Hugo themes page&lt;/a&gt; and select a theme for your website. I used the &lt;a href=&#34;https://themes.gohugo.io/academic/&#34; target=&#34;_blank&#34;&gt;Academic theme&lt;/a&gt; for my website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;image_2.png&#34; alt=&#34;png&#34; /&gt;
&lt;strong&gt;&lt;em&gt;The gallery of themes available to build a website with Hugo.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once you&amp;rsquo;ve found a theme you like, click the &lt;strong&gt;&lt;em&gt;download&lt;/em&gt;&lt;/strong&gt; button which will take you to the theme&amp;rsquo;s GitHub repository. In the repository click the green &lt;strong&gt;&lt;em&gt;Clone or download&lt;/em&gt;&lt;/strong&gt; button and copy the https web URL. Go back to your terminal, &lt;code&gt;cd&lt;/code&gt; to the &lt;strong&gt;&lt;em&gt;themes&lt;/em&gt;&lt;/strong&gt; directory and clone the repository:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd themes

$ git clone https://github.com/gcushen/hugo-academic.git

archetypes	content		layouts		themes
config.toml	data		static
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can type &lt;code&gt;ls&lt;/code&gt; to see that you now have a directory called &lt;strong&gt;&lt;em&gt;hugo-academic&lt;/em&gt;&lt;/strong&gt; (or whatever other theme you chose). Now &lt;code&gt;cd&lt;/code&gt; into that directory and again type &lt;code&gt;ls&lt;/code&gt; to see the content of the directory; these are the files and folders you will need to create your website.&lt;/p&gt;

&lt;h3 id=&#34;step-4-creating-your-website-a-name-4-a&#34;&gt;Step 4: Creating your website &lt;a name=&#34;4&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I found that the quickest (and dirtiest) way to get your website up and running is to simply copy everything in the folder &lt;strong&gt;&lt;em&gt;exampleSite&lt;/em&gt;&lt;/strong&gt; to your directory &lt;strong&gt;&lt;em&gt;websitename&lt;/em&gt;&lt;/strong&gt; - overwrite any duplications. Once you&amp;rsquo;ve done that, go ahead and copy all the other folders and files in &lt;strong&gt;&lt;em&gt;hugo-acaemic&lt;/em&gt;&lt;/strong&gt; (except for the &lt;strong&gt;&lt;em&gt;exampleSite&lt;/em&gt;&lt;/strong&gt; folder, &lt;strong&gt;&lt;em&gt;theme.toml&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;README.md&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;LICENSE.md&lt;/em&gt;&lt;/strong&gt;) to your directory &lt;strong&gt;&lt;em&gt;websitename&lt;/em&gt;&lt;/strong&gt; - again, overwrite any duplications.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;image_3.png&#34; alt=&#34;png&#34; /&gt;
&lt;strong&gt;&lt;em&gt;Example of what your directory might look like before and after copying the necessary files.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now you can see what your website currently looks like by changing to the directory &lt;strong&gt;&lt;em&gt;websitename&lt;/em&gt;&lt;/strong&gt; and typing:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This renders a local version of your website so you can see it and make changes before putting it online. Copy and paste the url output (e.g., &lt;strong&gt;&lt;em&gt;http://localhost:1313&lt;/em&gt;&lt;/strong&gt;) into your browser of choice to see your website.&lt;/p&gt;

&lt;p&gt;At this point go ahead and spend some time customizing your website. I recommend reading the documentation of the theme you chose to help navigate the folder and create new content. For example, &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; is the documentation for the academic theme. As you make changes, you should see that your website updates automatically in your browser - if for some reason it doesn&amp;rsquo;t, simply &lt;code&gt;ctrl+c&lt;/code&gt; in your terminal, re-execute &lt;code&gt;hugo server&lt;/code&gt;, and refresh your browser.&lt;/p&gt;

&lt;h3 id=&#34;step-5-hosting-your-website-on-github-pages-a-name-5-a&#34;&gt;Step 5: Hosting your website on GitHub Pages &lt;a name=&#34;5&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Once you&amp;rsquo;re ready to show your shiny new website to the world, we can host it on GitHub Pages.&lt;/p&gt;

&lt;p&gt;The first thing you need to do is go to &lt;a href=&#34;https://github.com/&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt; and create two empty repositories:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;a repository with the same name as the website directory you created: &amp;lsquo;websitename&amp;rsquo;; and,&lt;/li&gt;
&lt;li&gt;a repository with the name &amp;lsquo;yourgithubusername.github.io&amp;rsquo;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you haven&amp;rsquo;t created a repository before, simply click your GitHub profile at the top right-hand corner of the screen to see a drop-down menu, click &lt;strong&gt;&lt;em&gt;Your repositories&lt;/em&gt;&lt;/strong&gt; and on that page you will se a green button &lt;strong&gt;&lt;em&gt;New&lt;/em&gt;&lt;/strong&gt; which will help you create a repository. Once you&amp;rsquo;ve done that, copy the https key from the repository you created with the same name as your website and then in the terminal &lt;code&gt;cd&lt;/code&gt; to your local directory &lt;strong&gt;&lt;em&gt;websitename&lt;/em&gt;&lt;/strong&gt; and type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; $ git init

 $ git remote add origin https://github.com/User/websitename.git

 $ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create a git directory, link it to the remote GitHub repository and then push the contents of the local directory to the remote. Note that the &lt;code&gt;-u&lt;/code&gt; argument specifies the master branch of the remote as &amp;ldquo;upstream&amp;rdquo;, meaning that in the future, a simple &lt;code&gt;git push&lt;/code&gt; will suffice when pushing changes to the remote.&lt;/p&gt;

&lt;p&gt;Now copy the https key from the repository you created with the name &lt;strong&gt;&lt;em&gt;yourgithubusername.github.io&lt;/em&gt;&lt;/strong&gt; and copy the https key. Then &lt;code&gt;cd&lt;/code&gt; back to your initial &lt;strong&gt;&lt;em&gt;websites&lt;/em&gt;&lt;/strong&gt; directory and type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git clone https://github.com/User/yourgithubusername.github.io.git # Clone the remote repo

$ cd websitename # Change directory

$ hugo -d ../yourgithubusername.github.io # Deploy your website

$ cd ../yourgithubusername.github.io

$ git add .

$ git commit -m &amp;quot;first commit&amp;quot;

$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s it! Go to GitHub and go to the repository &lt;strong&gt;&lt;em&gt;yourgithubusername.github.io&lt;/em&gt;&lt;/strong&gt;, click the settings tab near the top of the page and scroll down to the subheading &lt;strong&gt;&lt;em&gt;GitHub Pages&lt;/em&gt;&lt;/strong&gt; where you will see the link to your new website: &lt;code&gt;http://yourgitubusername.github.io&lt;/code&gt;. Click the link to see your website out in the wild. Congratulations - you can now show off your work to the world (wide web)!&lt;/p&gt;

&lt;h3 id=&#34;step-6-updating-your-website-a-name-6-a&#34;&gt;Step 6: Updating your website &lt;a name=&#34;6&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;If you are going to have content on your website that will change over time (e.g., writing posts, updating research projects, changing your job title, etc.) then you&amp;rsquo;ll need to know how to make these changes to your website. Luckily, this is as easy as pie. Make any changes/additions to your website in your local directory &lt;strong&gt;&lt;em&gt;websitename&lt;/em&gt;&lt;/strong&gt; (remember to use &lt;code&gt;hugo server&lt;/code&gt; to render a local version of your website that you can view before deploying it online). Once you&amp;rsquo;ve made your changes make sure you&amp;rsquo;re in the &lt;strong&gt;&lt;em&gt;websitename&lt;/em&gt;&lt;/strong&gt; directory and type the following commands in terminal to push your local changes to the remote, re-deploy your website &lt;code&gt;yourgithubusername.github.io&lt;/code&gt; and then push that to the remote too:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git add .

$ git commit -m &amp;quot;some changes&amp;quot;

$ git push # push all changes to the remote

$ hugo -d ../yourgithubusername.github.io # re-deploy website

$ cd ../yourgithubusername.github.io

$ git add .

$ git commit -m &amp;quot;some changes&amp;quot;

$ git push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this, you may need to wait ~10 minutes for the changes to take effect on the online version of your website.&lt;/p&gt;

&lt;!-- ## Edit your post metadata

Open `index.md` in your text editor and edit the title etc. in the [front matter](https://sourcethemes.com/academic/docs/front-matter/) according to your preference.

To set a [featured image](https://sourcethemes.com/academic/docs/managing-content/#featured-image), place an image named `featured` into your post&#39;s folder.

For other tips, such as using math, see the guide on [writing content with Academic](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Calorie Calculator Web App</title>
      <link>http://tomasbeuzen.github.io/project/calocrunch/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/calocrunch/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pybeach: A Python package for extracting the location of dune toes on beach profile transects</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-pybeach/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-pybeach/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Public Machine Learning Course</title>
      <link>http://tomasbeuzen.github.io/project/bait-509/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/bait-509/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A variable selection package driving Netica with Python</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-cvnvs/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-cvnvs/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Ensemble models from machine learning: an example of wave runup and coastal dune erosion</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-gp/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-gp/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>A comparison of methods for discretizing continuous variables in Bayesian Networks</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-dis/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-dis/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Bayesian Networks in coastal engineering: Distinguishing descriptive and predictive applications</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-bn/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-bn/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Python Packaging Book</title>
      <link>http://tomasbeuzen.github.io/project/py-pkgs/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/py-pkgs/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Laboratory investigation of the Bruun Rule and beach response to sea level rise</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-bruun2/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-bruun2/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Physical model study of beach profile evolution by sea level rise in the presence of seawalls</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-bruun/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-bruun/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Physical model study of beach profile evolution by sea level rise in the presence of seawalls</title>
      <link>http://tomasbeuzen.github.io/publication/journal-article-boils1/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/journal-article-boils1/</guid>
      <description>&lt;!-- &lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


# Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
    <item>
      <title>Custom Apple Watch faces</title>
      <link>http://tomasbeuzen.github.io/project/apple-watch-faces/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/apple-watch-faces/</guid>
      <description></description>
    </item>
    
    <item>
      <title>NRL game predictions</title>
      <link>http://tomasbeuzen.github.io/project/nrl-prediction/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/nrl-prediction/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Predicting wave runup on beaches.</title>
      <link>http://tomasbeuzen.github.io/project/runup-prediction/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/runup-prediction/</guid>
      <description></description>
    </item>
    
    <item>
      <title>UNSW Water Research Centre jersey designs.</title>
      <link>http://tomasbeuzen.github.io/project/unsw-jersey/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/unsw-jersey/</guid>
      <description></description>
    </item>
    
    <item>
      <title>World Water Monitoring Day outreach program.</title>
      <link>http://tomasbeuzen.github.io/project/unsw-wwd/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/unsw-wwd/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pybeach - a Python package for locating the dune toe on cross-shore beach profile transects.</title>
      <link>http://tomasbeuzen.github.io/project/autobeach/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/project/autobeach/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Predicting storm erosion on sandy coastlines using a Bayesian network</title>
      <link>http://tomasbeuzen.github.io/publication/conference-paper-cp1/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      <guid>http://tomasbeuzen.github.io/publication/conference-paper-cp1/</guid>
      <description>&lt;!--
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Slides&lt;/em&gt; button above to demo Academic&amp;rsquo;s Markdown slides feature.
  &lt;/div&gt;
&lt;/div&gt;


Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). --&gt;
</description>
    </item>
    
  </channel>
</rss>
